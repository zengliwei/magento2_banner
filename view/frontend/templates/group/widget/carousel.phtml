<?php
/**
 * Copyright (c) Zengliwei. All rights reserved.
 * Each source file in this distribution is licensed under OSL 3.0, see LICENSE for details.
 */

use CrazyCat\Banner\Block\Widget\Carousel;

/** @var Carousel $block */
$items = $block->getItems();
$blockId = 'carousel-' . $block->getJsId();
?>
<div class="block-carousel">
    <section id="<?= $block->escapeHtmlAttr($blockId) ?>">
        <?php
        foreach ($items as $item):
            $target = $item->getDataByKey('target') ?: '_self';
            ?>
            <div data-type="<?= $block->escapeHtmlAttr($item->getDataByKey('type')) ?>">
                <?php if ($item->getDataByKey('type') == 'image'): ?>
                    <div class="image">
                        <?php if ($item->getDataByKey('url')): ?>
                            <a target="<?= $block->escapeHtmlAttr($target) ?>"
                               href="<?= $block->escapeUrl($block->getLinkUrl($item->getDataByKey('url'))) ?>">
                                <img alt="<?= $block->escapeHtmlAttr($item->getDataByKey('title')) ?>"
                                     src="<?= $block->escapeUrl($block->getMediaUrl($item->getDataByKey('media'))) ?>"/>
                            </a>
                        <?php else: ?>
                            <img alt="<?= $block->escapeHtmlAttr($item->getDataByKey('title')) ?>"
                                 src="<?= $block->escapeUrl($block->getMediaUrl($item->getDataByKey('media'))) ?>"/>
                        <?php endif; ?>
                    </div>
                    <?php if ($item->getDataByKey('content')): ?>
                        <div class="wysiwyg">
                            <?= $block->filterContent($item->getDataByKey('content')) ?>
                        </div>
                    <?php else: ?>
                        <div class="content">
                            <strong class="title"><?= $block->escapeHtml($item->getDataByKey('title')) ?></strong>
                        </div>
                    <?php endif; ?>
                <?php else: ?>
                    <div class="video">
                        <video muted>
                            <source src="<?= $block->escapeUrl($block->getMediaUrl($item->getDataByKey('media'))) ?>"/>
                        </video>
                    </div>
                <?php endif; ?>
            </div>
        <?php endforeach; ?>
    </section>
    <script>
        require(['jquery', 'carousel'], function ($) {
            const elCarousel = $('#<?= $block->escapeHtmlAttr($blockId) ?>');
            elCarousel.slick({
                accessibility: <?= $block->escapeJs($block->getDataByKey('accessibility')) ?>,
                adaptiveHeight: <?= $block->escapeJs($block->getDataByKey('adaptive_height')) ?>,
                arrows: <?= $block->escapeJs($block->getDataByKey('arrows')) ?>,
                autoplay: <?= $block->escapeJs($block->getDataByKey('autoplay')) ?>,
                autoplaySpeed: <?= $block->escapeJs($block->getDataByKey('autoplay_speed')) ?>,
                centerMode: <?= $block->escapeJs($block->getDataByKey('center_mode')) ?>,
                centerPadding: '<?= $block->escapeJs($block->getDataByKey('center_padding')) ?>',
                dots: <?= $block->escapeJs($block->getDataByKey('dots')) ?>,
                draggable: <?= $block->escapeJs($block->getDataByKey('draggable')) ?>,
                fade: <?= $block->escapeJs($block->getDataByKey('fade')) ?>,
                focusOnChange: <?= $block->escapeJs($block->getDataByKey('focus_on_change')) ?>,
                focusOnSelect: <?= $block->escapeJs($block->getDataByKey('focus_on_select')) ?>,
                infinite: <?= $block->escapeJs($block->getDataByKey('infinite')) ?>,
                initialSlide: <?= $block->escapeJs($block->getDataByKey('initial_slide')) ?>,
                lazyLoad: '<?= $block->escapeJs($block->getDataByKey('lazy_load')) ?>',
                pauseOnDotsHover: <?= $block->escapeJs($block->getDataByKey('pause_on_dots_hover')) ?>,
                pauseOnFocus: <?= $block->escapeJs($block->getDataByKey('pause_on_focus')) ?>,
                pauseOnHover: <?= $block->escapeJs($block->getDataByKey('pause_on_hover')) ?>,
                respondTo: 'min',
                rows: <?= $block->escapeJs($block->getDataByKey('rows')) ?>,
                rtl: <?= $block->escapeJs($block->getDataByKey('rtl')) ?>,
                slidesPerRow: <?= $block->escapeJs($block->getDataByKey('slides_per_row')) ?>,
                slidesToScroll: <?= $block->escapeJs($block->getDataByKey('slides_to_scroll')) ?>,
                slidesToShow: <?= $block->escapeJs($block->getDataByKey('slides_to_show')) ?>,
                speed: <?= $block->escapeJs($block->getDataByKey('speed')) ?>,
                swipe: <?= $block->escapeJs($block->getDataByKey('swipe')) ?>,
                swipeToSlide: <?= $block->escapeJs($block->getDataByKey('swipe_to_slide')) ?>,
                touchMove: <?= $block->escapeJs($block->getDataByKey('touch_move')) ?>,
                touchThreshold: <?= $block->escapeJs($block->getDataByKey('touch_threshold')) ?>,
                variableWidth: <?= $block->escapeJs($block->getDataByKey('variable_width')) ?>,
                vertical: <?= $block->escapeJs($block->getDataByKey('vertical')) ?>,
                verticalSwiping: <?= $block->escapeJs($block->getDataByKey('vertical_swiping')) ?>,
                waitForAnimate: <?= $block->escapeJs($block->getDataByKey('wait_for_animate')) ?>,
                responsive: [{
                    breakpoint: 1024,
                    settings: {
                        slidesToShow: <?= $block->escapeJs(min($block->getDataByKey('slides_to_show'), 5)) ?>
                    }
                }, {
                    breakpoint: 768,
                    settings: {
                        slidesToShow: <?= $block->escapeJs(min($block->getDataByKey('slides_to_show'), 2)) ?>
                    }
                }, {
                    breakpoint: 375,
                    settings: {
                        slidesToShow: 1
                    }
                }]
            }).on('afterChange', function (evt, slick, currentSlide, nextSlide) {
                const elCurrentItem = $(slick.$slides[currentSlide]);
                if (elCurrentItem.data('type') == 'video') {
                    elCarousel.slick('slickPause');
                    elCurrentItem.find('video')
                        .one('ended', function () {
                            elCarousel.slick('slickPlay');
                        })
                        .get(0).play();
                }
            });
        });
    </script>
</div>
